---
- name: Deep Security query for registered project hosts
  gather_facts: no
  hosts: localhost

  vars_files:
    - ../../vars/secrets.yml
    - ../../vars/gcp.yml

  vars:
    scopes:
      - https://www.googleapis.com/auth/compute
      
  tasks:
  - name: Test for computer already exists in DS
    uri:
      url: "https://{{ dsm_url }}:4119/api/computers/search"
      method: POST
      validate_certs: no
      body: ' { "maxItems": 5000, "searchCriteria": [ { "fieldName": "hostName", "stringTest": "equal", "stringValue": "%{{ project_id }}%", "stringWildcards": "true" } ] }'
      headers:
        Content-Type: "application/json"
        api-secret-key: "{{ api_key }}"
        api-version: "v1"
    register: search_result
    delegate_to: 127.0.0.1

  - name: Set computers list fact
    set_fact:
      dsc: "{{ search_result.json }}"

  - name: Iterate JSON
    set_fact:
      ds_computer_item: "{{ item.hostName }}"
    with_items: "{{ dsc.computers }}"
    register: dsc_list

  - name: Create Fact List
    set_fact:
      dscs: "{{ dsc_list.results | map(attribute='ansible_facts.ds_computer_item') | list }}"

- name: Query GCE inventory for DS registered project hosts
  gather_facts: no
  hosts: localhost
  vars:
    extra_vars:
      zone: '{{ lookup("env", "zone" }}'
      project_id: '{{lookup("env", "project_id" }}'
      dsm_url: '{{ lookup("env", "dsm_url") }}'
      api_key: '{{ lookup("env", "api_key") }}'
  tasks:
  - name: Set computers list fact
    set_fact:
      gcec: "{{ hostvars }}"

  # Here I'd need to know the FQDN, but gce does only provide the short name. Needs to be fixed
  - name: Iterate JSON
    set_fact:
      gce_computer_item: "{{ item }}.c.erudite-variety-209408.internal"
    with_items: "{{ gcec }}"
    register: gcec_list

  - name: Create Fact List
    set_fact:
      gcecs: "{{ gcec_list.results | map(attribute='ansible_facts.gce_computer_item') | list }}"

- name: Delete non-existing computers from Deep Security
  gather_facts: no
  hosts: localhost
  vars:
    extra_vars:
      zone: '{{ lookup("env", "zone" }}'
      project_id: '{{lookup("env", "project_id" }}'
      dsm_url: '{{ lookup("env", "dsm_url") }}'
      api_key: '{{ lookup("env", "api_key") }}'
  tasks:
  - name: DEBUG delete computers
    debug: var=item
    with_items: "{{ hostvars['localhost'].dscs | difference(hostvars['localhost'].gcecs) }}"

  - name: Get IDs of to be deleted computers in Deep Security and delete the computers
    ds:
      hostname: "{{ outer_item }}"
      state: absent
      dsm_url: "https://{{ dsm_url }}:4119"
      api_key: "{{ api_key }}"
    delegate_to: 127.0.0.1
    with_items: "{{ hostvars['localhost'].dscs | difference(hostvars['localhost'].gcecs) }}"
    loop_control:
      loop_var: outer_item
