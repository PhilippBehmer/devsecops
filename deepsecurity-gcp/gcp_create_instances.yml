---
- name: Create an instance
  debugger: on_failed
  hosts: localhost
  gather_facts: no
  connection: local

  vars_files:
    - ../../vars/secrets.yml
    - ../../vars/gcp.yml
  vars:
    webservers:
      - eu-gcp-web-1
      - eu-gcp-web-2
    scopes:
      - https://www.googleapis.com/auth/compute

  tasks:
    - name: create a disk
      gcp_compute_disk:
        name: 'disk-instance-linux-webserver'
        size_gb: 10
        source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts'
        zone: "{{ zone }}"
        project: "{{ project_id }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: disk_linux_webserver
    - name: create a disk
      gcp_compute_disk:
        name: 'disk-instance-windows-webserver'
        size_gb: 50
        source_image: 'projects/windows-cloud/global/images/family/windows-2012-r2'
        zone: "{{ zone }}"
        project: "{{ project_id }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: disk_windows_webserver

    - name: create a network
      gcp_compute_network:
        name: 'network-instance'
        auto_create_subnetworks: yes
        project: "{{ project_id }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: network

    - name: create a firewall
      gcp_compute_firewall:
        name: ansible-firewall
        network: "projects/{{ project_id }}/global/networks/{{ network.name }}"
        allowed:
          - ip_protocol: tcp
            ports: ['80', '443', '22', '3389', '5986','5985']
        target_tags:
          - webserver
        source_ranges: ['0.0.0.0/0']
        project: "{{ project_id }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: firewall

    - name: create a linux webserver address
      gcp_compute_address:
        name: 'address-instance-linux-webserver'
        region: "{{ region }}"
        project: "{{ project_id }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: address_linux_webserver
    - name: create a windows webserver address
      gcp_compute_address:
        name: 'address-instance-windows-webserver'
        region: "{{ region }}"
        project: "{{ project_id }}"
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes: "{{ scopes }}"
        state: present
      register: address_windows_webserver

    - name: create a linux instance
      gcp_compute_instance:
        state: present
        name: eu-gcp-web-1
        machine_type: n1-standard-1
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk_linux_webserver }}"
        metadata:
          startup-script: |
            #!/bin/sh
            apt update
            apt install -y python python-simplejson
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address_linux_webserver }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ zone }}"
        project: "{{ project_id }}"
        tags:
          items:
            - "{{ project_id }}"
            - linux
            - webserver
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes: "{{ scopes }}"
      register: instance_linux_webserver
      
    - name: create a windows instance
      gcp_compute_instance:
        state: present
        name: eu-gcp-web-2
        machine_type: n1-standard-1
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk_windows_webserver }}"
        metadata:
          sysprep-specialize-script-ps1: |
            Invoke-Expression -Command ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1')); Enable-WSManCredSSP -Role Server -Force
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address_windows_webserver }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ zone }}"
        project: "{{ project_id }}"
        tags:
          items:
            - "{{ project_id }}"
            - windows
            - webserver
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file }}"
        scopes: "{{ scopes }}"
      register: instance_windows_webserver
